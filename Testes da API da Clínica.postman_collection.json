{
	"info": {
		"_postman_id": "8fbfc287-2e07-44a6-9dfe-dce9a436e10c",
		"name": "Testes da API da Clínica",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38376993"
	},
	"item": [
		{
			"name": "CT-01: Cadastrar Paciente com Sucesso",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code é 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"A resposta possui a propriedade 'paciente'\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('paciente');",
							"});",
							"pm.test(\"O paciente criado tem o nome 'Ana Souza'\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.paciente.nome).to.eql(\"Ana Souza\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nome\": \"Ana Souza\",\n    \"cpf\": \"123.456.789-00\",\n    \"dataNascimento\": \"2000-01-30\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/pacientes",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"pacientes"
					]
				}
			},
			"response": []
		},
		{
			"name": "CT-02: Cadastrar com Erro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status da resposta é 400 Bad Request\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"A resposta contém a mensagem de erro correta\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.message).to.include(\"Dados incompletos\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nome\": \"Pedro\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/pacientes",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"pacientes"
					]
				}
			},
			"response": []
		},
		{
			"name": "CT-03: Listar Todos os Pacientes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status da resposta é 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"A resposta é um array (lista)\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData).to.be.an('array');",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/pacientes",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"pacientes"
					]
				}
			},
			"response": []
		},
		{
			"name": "CT-04: Buscar Paciente por ID Existente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status da resposta é 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Os dados do paciente retornado estão corretos\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.id).to.eql(1);",
							"    pm.expect(responseData.nome).to.eql(\"Carlos Silva\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/pacientes/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"pacientes",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "CT-05: Tentar Buscar Paciente com ID Inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status da resposta é 404 Not Found\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"A resposta contém a mensagem de 'não encontrado'\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.message).to.eql(\"Paciente não encontrado.\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/pacientes/99",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"pacientes",
						"99"
					]
				}
			},
			"response": []
		},
		{
			"name": "CT-06: Atualizar Paciente Existente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status da resposta é 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"O nome do paciente foi atualizado corretamente\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.paciente.nome).to.eql(\"Carlos Silva Santos\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nome\": \"Carlos Silva Santos\",\n    \"cpf\": \"111.222.333-44\",\n    \"dataNascimento\": \"1990-05-15\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/pacientes/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"pacientes",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "CT-07: Deletar Paciente Existente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status da resposta é 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"A resposta contém a mensagem de sucesso na exclusão\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.message).to.eql(\"Paciente deletado com sucesso.\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/pacientes/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"pacientes",
						"2"
					]
				}
			},
			"response": []
		}
	]
}